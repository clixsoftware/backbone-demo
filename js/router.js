// Generated by CoffeeScript 1.3.3
/*
ROUTER / CONTROLLER
*/

App.Router = Backbone.Router.extend({
  routes: App.Routes,
  members: function(params) {
    var filter;
    if (params == null) {
      params = {};
    }
    if (params.filter) {
      filter = params.filter;
    }
    App.Members = new App.Collection.Members([], {
      filter: filter
    });
    App.Members.fetch({
      success: function(model, response) {
        return this.membersView = new App.View.Member.list({
          collection: App.Members,
          filter: filter
        });
      }
    });
    if (!App.MemberView) {
      return this.memberCreate();
    }
  },
  member: function(id) {
    var member, self;
    if (id == null) {
      id = 1;
    }
    self = this;
    if (App.Members && App.Members.get(id)) {
      return App.MemberView = new App.View.Member.view({
        model: App.Members.get(id)
      });
    } else {
      member = new App.Model.Member({
        id: id
      });
      return member.fetch({
        success: function(model, response) {
          return App.MemberView = new App.View.Member.view({
            model: member
          });
        }
      });
    }
  },
  memberUpdate: function(id) {
    var member, self;
    self = this;
    if (App.Members && App.Members.get(id)) {
      return App.MemberView = new App.View.Member.update({
        model: App.Members.get(id)
      });
    } else {
      member = new App.Model.Member({
        id: id
      });
      return member.fetch({
        success: function(model, response) {
          return App.MemberView = new App.View.Member.update({
            model: member
          });
        }
      });
    }
  },
  memberDelete: function(id) {
    var member, self;
    self = this;
    if (App.Members && App.Members.get(id)) {
      return App.MemberView = new App.View.Member["delete"]({
        model: App.Members.get(id)
      });
    } else {
      member = new App.Model.Member({
        id: id
      });
      return member.fetch({
        success: function(model, response) {
          return App.MemberView = new App.View.Member["delete"]({
            model: member
          });
        }
      });
    }
  },
  memberCreate: function() {
    return App.MemberView = new App.View.Member.create;
  },
  'default': function(actions) {
    return App.HomeView = new App.View.Home;
  }
});
